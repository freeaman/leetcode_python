96. 不同的二叉搜索树
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？
示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
对于一个长度为9的序列'123456789',构造搜索二叉树的第一步是确定根节点x.
对1—9的每一个数都可以作为节点.
当根节点为 1 时，二叉搜索树的数量等于长度为8的序列‘23456789’的二叉搜索树的数量。
当根节点为 2 时，二叉搜索树的数量等于长度为1的序列‘1’的数量 乘以 长度为7的序列‘23456789’的二叉搜索树的数量。
。。。
当根节点为 N 时，二叉搜索树的数量等于长度为 N - 1 的序列‘12,,,N-1’的数量 乘以 长度为9 - N - 1的序列‘N+1,,,89’的二叉搜索树的数量。
将根节点的所有取值对应的搜索二叉树数量求和得到结果。

dp[i]为长二叉搜索数的种数
dp[N] = dp[0]*dp[N-1] + dp[1]*dp[N-2] +...+ dp[i]*dp[N - 1 - i] + dp[N - 1]*dp[0]
其中dp[0] = 1
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
dp = [0] * (n + 1)
dp[0] = 1
#对于
for N in range(1,n + 1):
    for i in range(0,N):
        dp[N] += dp[i] * dp[N - 1 - i]
return dp[n]
